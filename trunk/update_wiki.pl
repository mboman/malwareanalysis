#!/usr/bin/perl

# Stop us from shooting outselves in the foot
use strict;
use warnings;

# We are storing the configuration file in INI format
use Config::IniHash;
use Dir::Self;

# We need to interact with Amazon SimpleDB
use Amazon::SimpleDB::Client;

# We need to interact with MediaWiki
use CMS::MediaWiki;
use Text::Template;    # We use a template, makes life easier

# We need to interact with Amazon SQS
use Amazon::SQS::Simple;

# Configuration
my $config   = ReadINI( __DIR__ . "/config.ini" );
my %metadata = ();

#################################
# Pick up a ticket from the SQS #
#################################
my $sqs = new Amazon::SQS::Simple(
    $config->{'settings'}->{'aws_access_key_id'},
    $config->{'settings'}->{'aws_secret_access_key'}
);

my $queue =
  $sqs->GetQueue( "http://queue.amazonaws.com/"
      . $config->{'settings'}->{'sqs_prefix'}
      . "update_wiki" );

##################################
# Get the metadata from SimpleDB #
##################################

my $simpledb = Amazon::SimpleDB::Client->new(
    $config->{'settings'}->{'aws_access_key_id'},
    $config->{'settings'}->{'aws_secret_access_key'}
);

###############################
# Setup MediaWiki environment #
###############################

my $mw = CMS::MediaWiki->new(
    host => $config->{'mediawiki'}->{'host'},
    path => $config->{'mediawiki'}->{'path'}
);

$mw->login(
    user => $config->{'mediawiki'}->{'username'},
    pass => $config->{'mediawiki'}->{'password'}
);

while (1) {
    my $msg = $queue->ReceiveMessage();

    if ( !defined($msg) ) {
        print "DEBUG: No tickets in the queue, sleeping...\n";
        sleep(300);
    }
    elsif ( $msg->MessageBody() =~
        m/e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855/ )
    {

        # If the ticket refers to an empty sample
        # ("e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855")
        # then delete it immidialty
        print "DEBUG: Deleting SQS ticket (empty): "
          . $msg->MessageBody() . "\n";
        $queue->DeleteMessage( $msg->ReceiptHandle() );
        exit;
    }
    else {

        print "DEBUG: Picked up SQS ticket: " . $msg->MessageBody() . "\n";
        my $response = $simpledb->getAttributes(
            {
                DomainName => $config->{'settings'}->{'simpledb_name'},
                ItemName   => $msg->MessageBody()
            }
        );

        # Feed the SimpleDB data into an hash
        if ( $response->isSetGetAttributesResult() ) {
            my $getAttributesResult = $response->getGetAttributesResult();
            my $attributeList       = $getAttributesResult->getAttribute();
            foreach (@$attributeList) {
                my $attribute = $_;
                $metadata{ $attribute->getName() } = $attribute->getValue();
            }
        }

        if ( defined( $metadata{'sha256'} ) ) {

            my $template = Text::Template->new( SOURCE => 'wikianalysis.tmpl' )
              or die "Couldn't construct template: $Text::Template::ERROR";

            my $wikitext = $template->fill_in( HASH => \%metadata );

            if ( defined $wikitext ) {
                print $wikitext;

                #######################
                # Upload data to Wiki #
                #######################

                $mw->editPage(
                    title   => $metadata{'sha256'},
                    section => '',
                    text    => $wikitext,
                    summary => "Updated article"
                );
            }
            else {
                die "Couldn't fill in template: $Text::Template::ERROR";
            }
        }
        print "DEBUG: Deleting SQS ticket: " . $msg->MessageBody() . "\n";
        $queue->DeleteMessage( $msg->ReceiptHandle() );
    }
}
